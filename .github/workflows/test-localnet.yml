name: Temp Test MyLocalTON

# todo: build from source & cache layer vs cache prepublished images
# todo: version management for prepublished images
on:
  push:
    branches:
      - feature/mylocalton
  pull_request:

jobs:
  test-localnet:
    name: Testing MyLocalTON
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and tag images from GitHub Container Registry
        run: |
          TARGET_REGISTRY="ghcr.io/${{ github.repository_owner }}"
          
          IMAGES=(
            "ghcr.io/neodix42/mylocalton-docker:latest" 
            "ghcr.io/neodix42/ton-http-api:latest"
            "ghcr.io/neodix42/mylocalton-docker-faucet:latest"
            "redis:latest"
            "postgres:17"
            "toncenter/ton-indexer-classifier:v1.2.0-test"
            "toncenter/ton-indexer-api:v1.2.0-test"
            "toncenter/ton-indexer-worker:v1.2.0-test"
          )
          
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.event_name }}" == "schedule" ]]; then
            SHOULD_PUSH=true
          else
            SHOULD_PUSH=false
          fi
          
          for IMG in "${IMAGES[@]}"; do
            # Extract image name and tag
            IMG_NAME=$(echo $IMG | cut -d: -f1 | sed 's|.*/||')
            IMG_TAG=$(echo $IMG | cut -d: -f2)
            TARGET_IMG="${TARGET_REGISTRY}/cache-${IMG_NAME}:${IMG_TAG}"
            
            # Check if the target image already exists in our registry
            if docker manifest inspect ${TARGET_IMG} &>/dev/null; then
              echo "‚úÖ ${TARGET_IMG} already exists in registry, using it"
              docker pull ${TARGET_IMG}
            else
              echo "‚ö†Ô∏è ${TARGET_IMG} not found, pulling from source"
              docker pull ${IMG}
              docker tag ${IMG} ${TARGET_IMG}
              
              if [[ "$SHOULD_PUSH" == "true" ]]; then
                echo "üöÄ Pushing ${TARGET_IMG} to registry for future runs"
                docker push ${TARGET_IMG}
              fi
            fi
            
            docker tag ${TARGET_IMG} ${IMG}
          done
          
          docker images

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Start TON Local Network
        run: |
          chmod +x scripts/localnet-up.sh
          scripts/localnet-up.sh
          
      - name: Run build
        run: |
          pushd contracts
          nix develop .#contracts -c yarn && yarn build
          
      - name: Run tests
        run: |
          pushd contracts
          nix develop .#contracts -c yarn test
