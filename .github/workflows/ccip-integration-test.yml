name: 'Run CCIP Integration Tests'

on:
  pull_request:
  push:
    branches:
      # TODO: change this to main when we are ready to merge
      - 'feature/ci-core-integration-tests'

env:
  DEFAULT_CORE_REF: 'bb1d9c14f7cd8a059f8f3d2edcce68576e0905f2'
  CACHE_DIR: integration-tests/.cache/images
  TON_IMAGES: >-
    ghcr.io/neodix42/mylocalton-docker:latest
    redis:latest
    postgres:17
    ghcr.io/neodix42/ton-http-api:latest
    ghcr.io/neodix42/mylocalton-docker-faucet:latest

jobs:
  integration-test-matrix:
    strategy:
      fail-fast: false
      matrix:
        type:
          # TODO: add more tests here
          - name: 'Messaging Test'
            cmd: 'cd integration-tests/smoke/ccip && go test ccip_ton_messaging_test.go -timeout 12m -test.parallel=2 -count=1 -json'

    name: Integration Tests (${{ matrix.type.name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare cache directory
        run: mkdir -p ${{ env.CACHE_DIR }}

      - name: Retrieve cached Docker images
        id: cache-docker
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}/docker-images.tar
          key: mylocalton-images-v1

      - name: Pull Docker images (if no cache hit)
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss - pulling Docker images"
          for image in ${{ env.TON_IMAGES }}; do
            echo "Pulling $image"
            docker pull $image
          done
          echo "Saving Docker images to cache"
          docker save ${{ env.TON_IMAGES }} -o ${{ env.CACHE_DIR }}/docker-images.tar

      - name: Load cached Docker images
        if: steps.cache-docker.outputs.cache-hit == 'true'
        run: |
          echo "Cache hit - loading Docker images"
          docker load -i ${{ env.CACHE_DIR }}/docker-images.tar

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Clone Chainlink Core repo
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink
          ref: ${{ env.DEFAULT_CORE_REF }}
          path: chainlink

      - name: Checkout chainlink-ccip repo (for Postgres Action)
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink-ccip
          path: chainlink-ccip
          sparse-checkout: .github/actions/setup-postgres/**
          sparse-checkout-cone-mode: false

      - name: Setup Postgres
        uses: ./chainlink-ccip/.github/actions/setup-postgres
        with:
          base-path: chainlink-ccip

      - name: Run Integration Tests
        run: |
          chmod +x ./scripts/e2e/run-e2e-test.sh
          # TODO: do we need a dedicated e2e shell environment?
          nix develop . -c ./scripts/e2e/run-e2e-test.sh \
            --core-dir "${{ github.workspace }}/chainlink" \
            --core-ref "${{ env.DEFAULT_CORE_REF }}" \
            --test-command "${{ matrix.type.cmd }}"

  integration-test-ccip:
    if: always()
    runs-on: ubuntu-latest
    needs: [integration-test-matrix]
    steps:
      - name: Fail the job if ccip tests in PR not successful
        if: always() && needs.integration-test-matrix.result == 'failure'
        run: exit 1
