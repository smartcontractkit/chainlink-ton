name: 'Run CCIP Integration Tests'

on:
  pull_request:
  push:
    branches:
      - 'main'
jobs:
  integration-test-matrix:
    strategy:
      fail-fast: false
      matrix:
        type:
          # Note: list of tests, add more tests here
          - name: 'Messaging Test'
            cmd: 'cd integration-tests/smoke/ccip && go test ccip_ton_messaging_test.go -timeout 12m -test.parallel=2 -count=1 -json'

    name: Integration Tests (${{ matrix.type.name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Read Chainlink Core Ref from .core_version
        id: read_core_ref
        run: echo "CORE_REF=$(cat ./scripts/e2e/.core_version | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      - name: Checkout Chainlink Core repo
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink
          ref: ${{ steps.read_core_ref.outputs.CORE_REF }}
          path: chainlink

      - name: Checkout chainlink-ccip repo (for Postgres Action)
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink-ccip
          path: chainlink-ccip
          sparse-checkout: .github/actions/setup-postgres/**
          sparse-checkout-cone-mode: false

      - name: Setup Postgres
        uses: ./chainlink-ccip/.github/actions/setup-postgres
        with:
          base-path: chainlink-ccip

      - name: Run Integration Tests
        run: |
          chmod +x ./scripts/e2e/run-e2e-test.sh
          nix develop . -c ./scripts/e2e/run-e2e-test.sh \
            --core-dir "${{ github.workspace }}/chainlink" \
            --test-command "${{ matrix.type.cmd }}"

  integration-test-ccip:
    if: always()
    runs-on: ubuntu-latest
    needs: [integration-test-matrix]
    steps:
      - name: Fail the job if ccip tests in PR not successful
        if: always() && needs.integration-test-matrix.result == 'failure'
        run: exit 1
