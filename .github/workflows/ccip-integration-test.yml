name: 'Run CCIP Integration Tests'

on:
  pull_request:
  push:
    branches:
      - 'main'
jobs:
  integration-test-matrix:
    strategy:
      fail-fast: false
      matrix:
        type:
          # Note: list of tests, add more tests here
          - name: 'Barebone EVM > TON Messaging'
            cmd: 'cd integration-tests/smoke/ccip && go test ccip_ton_messaging_test.go -timeout 12m -test.parallel=2 -count=1 -json'

    name: ${{ matrix.type.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Read Chainlink Core Ref from .core_version
        id: read_core_ref
        run: echo "CORE_REF=$(cat ./scripts/.core_version | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      - name: Checkout Chainlink Core repo
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink
          ref: ${{ steps.read_core_ref.outputs.CORE_REF }}
          path: chainlink

      - name: Setup Environment and Run Tests
        run: |
          nix develop .#e2e -c bash -c 'scripts/e2e/setup-env.sh --core-dir "${GITHUB_WORKSPACE}/chainlink" && scripts/e2e/run-test.sh --core-dir "${GITHUB_WORKSPACE}/chainlink" --test-command "${{ matrix.type.cmd }}"'

  integration-test-ccip:
    if: always()
    runs-on: ubuntu-latest
    needs: [integration-test-matrix]
    steps:
      - name: Fail the job if ccip tests in PR not successful
        if: always() && needs.integration-test-matrix.result == 'failure'
        run: exit 1
