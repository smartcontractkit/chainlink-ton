name: 'MyLocalTon Images Action'
description: 'Load or pull MyLocalTon Docker images'
inputs:
  cache-dir:
    description: 'Directory to store cached images'
    required: false
    default: 'integration-tests/.cache/images'
  compose-url:
    description: 'URL to docker-compose.yml'
    required: false
    default: 'https://raw.githubusercontent.com/neodix42/mylocalton-docker/main/docker-compose.yaml'
  images:
    description: 'Space-separated list of Docker images'
    required: false
    default: >-
      ghcr.io/neodix42/mylocalton-docker:latest
      ghcr.io/neodix42/ton-http-api:latest
      redis:latest
      postgres:17
      toncenter/ton-indexer-worker:v1.2.0-test
      toncenter/ton-indexer-api:v1.2.0-test
  force-refresh:
    description: 'Force refresh the cache even if it exists'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Prepare cache directory and compose file
      shell: bash
      run: |
        mkdir -p ${{ inputs.cache-dir }}
        curl -fsSL "${{ inputs.compose-url }}" -o ${{ inputs.cache-dir }}/docker-compose.yml

    # todo: cache with GHCR
    - name: Authenticate to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Restore Docker build cache
      id: docker-cache-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ inputs.docker-cache-dir }}
        key: docker-build-cache-${{ hashFiles('${{ inputs.cache-dir }}/docker-compose.yml') }}
        restore-keys: docker-build-cache-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build services with caching
      uses: docker/bake-action@v3
      with:
        files: ${{ inputs.cache-dir }}/docker-compose.yml,${{ inputs.cache-config }}
        # todo: confiurable input fields
        targets: genesis,tonhttpapi,event-cache,index-postgres,index-api,index-worker

    - name: Save Docker build cache
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.docker-cache-dir }}
        key: docker-build-cache-${{ hashFiles('${{ inputs.cache-dir }}/docker-compose.yml') }}